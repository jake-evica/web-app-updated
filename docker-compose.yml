version: '3'

services:

  db:
    image: postgres:12
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - default

  adminer:
    image: adminer:4
    depends_on:
      - db
    networks:
      - default

  prestart:
    image: jakeevica/backend:latest
    build:
      context: ./backend

    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    command: bash /app/scripts/prestart.sh
    networks:
      - default

  backend:
    image: jakeevica/backend:latest
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
      prestart:
        condition: service_completed_successfully
    env_file:
      - .env
    networks:
      - default
  frontend:
    #image: '${DOCKER_IMAGE_FRONTEND?Variable not set}:${TAG-latest}'
    restart: always
    networks:
      - default
    build:
      context: ./frontend
      args:
        - VITE_API_URL=https://api.${DOMAIN?Variable not set}
        - NODE_ENV=production
    ports:
      - "3000:80"


volumes:
  app-db-data:

networks:
  default:
    name: app-network
